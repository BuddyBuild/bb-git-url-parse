"use strict";function _typeof(obj){return obj&&typeof Symbol!=="undefined"&&obj.constructor===Symbol?"symbol":typeof obj}(function(f){if((typeof exports==="undefined"?"undefined":_typeof(exports))==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.gitUrlParse=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++){s(r[o])}return s}({1:[function(require,module,exports){"use strict";var gitUp=require("git-up");function gitUrlParse(url){if(typeof url!=="string"){throw new Error("The url must be a string.")}var urlInfo=gitUp(url),sourceParts=urlInfo.resource.split("."),splits=null;urlInfo.toString=function(type){return gitUrlParse.stringify(this,type)};urlInfo.source=sourceParts.length>2?sourceParts.slice(-2).join("."):urlInfo.source=urlInfo.resource;urlInfo.name=urlInfo.pathname.substring(1).replace(/\.git$/,"");urlInfo.owner=urlInfo.user;urlInfo.organization=urlInfo.owner;switch(urlInfo.source){case"cloudforge.com":urlInfo.owner=urlInfo.user;urlInfo.organization=sourceParts[0];break;default:splits=urlInfo.name.split("/");if(splits.length===2){urlInfo.owner=splits[0];urlInfo.name=splits[1]}break}urlInfo.full_name=urlInfo.owner;if(urlInfo.name){urlInfo.full_name&&(urlInfo.full_name+="/");urlInfo.full_name+=urlInfo.name}return urlInfo}gitUrlParse.stringify=function(obj,type){type=type||obj.protocol;switch(type){case"ssh":return"git@"+obj.resource+":"+obj.full_name+".git";case"git+ssh":return"git+ssh://git@"+obj.resource+"/"+obj.full_name+".git";case"http":case"https":return type+"://"+obj.resource+"/"+obj.full_name;default:return obj.href}};module.exports=gitUrlParse},{"git-up":2}],2:[function(require,module,exports){"use strict";var parseUrl=require("parse-url"),isSsh=require("is-ssh");function gitUp(input){var output=parseUrl(input);output.token="";var splits=output.user.split(":");if(splits.length===2){if(splits[1]==="x-oauth-basic"){output.token=splits[0]}else if(splits[0]==="x-token-auth"){output.token=splits[1]}}if(isSsh(output.protocols)||isSsh(input)){output.protocol="ssh"}else if(output.protocols.length){output.protocol=output.protocols[0]}else{output.protocol="file"}return output}module.exports=gitUp},{"is-ssh":3,"parse-url":4}],3:[function(require,module,exports){var protocols=require("protocols");function isSsh(input){if(Array.isArray(input)){return input.indexOf("ssh")!==-1||input.indexOf("rsync")!==-1}if(typeof input!=="string"){return false}var prots=protocols(input);input=input.substring(input.indexOf("://")+3);if(isSsh(prots)){return true}return input.indexOf("@")<input.indexOf(":")}module.exports=isSsh},{protocols:5}],4:[function(require,module,exports){var protocols=require("protocols"),isSsh=require("is-ssh");function parseUrl(url){var output={protocols:protocols(url),protocol:null,port:null,resource:"",user:"",pathname:"",hash:"",search:"",href:url},protocolIndex=url.indexOf("://"),resourceIndex=-1,splits=null,parts=null;output.protocol=output.protocols[0]||(isSsh(url)?"ssh":"file");if(protocolIndex!==-1){url=url.substring(protocolIndex+3)}parts=url.split("/");output.resource=parts.shift();splits=output.resource.split("@");if(splits.length===2){output.user=splits[0];output.resource=splits[1]}splits=output.resource.split(":");if(splits.length===2){output.resource=splits[0];output.port=parseInt(splits[1]);if(isNaN(output.port)){output.port=null;parts.unshift(splits[1])}}parts=parts.filter(Boolean);output.pathname="/"+parts.join("/");splits=output.pathname.split("#");if(splits.length===2){output.pathname=splits[0];output.hash=splits[1]}splits=output.pathname.split("?");if(splits.length===2){output.pathname=splits[0];output.search=splits[1]}return output}module.exports=parseUrl},{"is-ssh":3,protocols:5}],5:[function(require,module,exports){module.exports=function protocols(input,first){if(first===true){first=0}var index=input.indexOf("://"),splits=input.substring(0,index).split("+").filter(Boolean);if(typeof first==="number"){return splits[first]}return splits}},{}]},{},[1])(1)});